macro canMoveFriend = {
    if (= ahead friend) then {
        if (random 2) then {
            turn left;
            if (= ahead friend) then {
                turn left;
                move
            }
            else {
                move
            }
        }
        else {
            turn right;
            if (= ahead friend) then {
                turn right;
                move
            }
            else {
                move
            }
        }
    }
    else {
        move
    }
};

macro canMove = {
    if (= ahead rock) then {
        if (random 2) then {
            turn left;
            turn left;
            if (= ahead rock) then {
                turn left;
                call canMoveFriend
            }
            else {
                call canMoveFriend
            }
        }
        else {
            turn right;
            turn right;
            if (= ahead rock) then {
                turn right;
                call canMoveFriend
            }
            else {
                call canMoveFriend
            }
        }
    }
    else {
        call canMoveFriend
    }
};

macro moveTest = {
    moveelse {
        if (random 2) then {
            turn left;
            if (random 2) then {
                turn left
            }
            else{
                nop
            }
        }
        else {
            turn right;
            if (random 2) then {
                turn right
            }
            else {
                nop
            }
        }
    }
};

macro guard={
    move;
    move;
    move;
    mark 1;
    wait 200;
    unmark 1;
    turn left;
    turn left;
    turn left;
    while(!=here home) do{
        move
    };
    turn left;
    turn left;
    turn left;
    while(true) do{
        if (et (=ahead food) (!=ahead friend)) then{
            move;
            pickup;
            turn left;
            turn left;
            turn left;
            move;
            drop;
            turn left;
            turn left;
            turn left
        }
        else{
            nop
        }
    }
};

macro sortieBase ={
    mark 0;
    mark 2;
    mark 4;
    move;
    if(et (=leftahead marker 1) (=ahead marker 1)) then {
        turn right;
        move;
        turn left
    }
    else {
        if(et (=rightahead marker 1) (=ahead marker 1)) then {
            turn left;
            move;
            turn right
        }
        else {
            move
        }
    }
};

macro BougeRandom = {
	if (random 2) then {
		turn left;
		turn left;
		move
	}
	else {
		turn right;
		turn right;
		move
	}
};

macro Bouge = {
	moveelse {
		call BougeRandom
	}
};



macro SenseBase = {
	if (= rightahead home) then {
		turn right;
		drop
	}
	else {
	if (= leftahead home) then {
		turn left;
		drop
	}
	else {
	if (= ahead home) then {
		drop
	}
	else {
		call Bouge
	}
	}
	}
};

macro SenseBaseEnnemi = {
	if (= rightahead foehome) then {
		turn right;
		call Bouge
	}
	else {
	if (= leftahead foehome) then {
		call Bouge
	}
	else {
		call Bouge
	}
	}
};

macro BougeDansBase = {
	if (= ahead foehome) then {
		call Bouge
	}
	else {
	if (= rightahead foehome) then {
		turn right;
		turn right;
		call Bouge
	}
	else {
		turn left;
		turn left;
		call Bouge
	}
	}
};

macro TrouveNourritureDansBase = {
	while (!= here food) do {
		if (= ahead food) then {
			call Bouge
		}
		else {
		if (= rightahead food) then {
			turn right;
			call Bouge
		}
		else {
		if (= leftahead food) then {
			turn left;
			call Bouge
		}
		else {
			call BougeDansBase
		}
		}
		}
	};
	pickup
};


macro GoToBaseEnnemi = {
	while (!= here foehome) do {
		call SenseBaseEnnemi;
		if (= ahead marker 3) then {
			call Bouge
		}
		else {
		if (= rightahead marker 3) then {
			turn right;
			call Bouge
		}
		else {
		if (= leftahead marker 3) then {
			turn left;
			call Bouge
		}
		else {
			moveelse {
				if (= rightahead rock) then {
					turn left;
					turn left;
					call Bouge
				}
				else {
					turn right;
					turn right;
					call Bouge
				}
			}
		}
		}
		};
		mark 2
	}
};


macro RentreMaison = {
	while (!= ahead home) do {
		call SenseBase;
		if (et (= ahead marker 2) (!= ahead home)) then {
			call Bouge
		}
		else {
		if (et (= rightahead marker 2) (!= rightahead home)) then {
			turn right;
			call Bouge
		}
		else {
		if (et (= leftahead marker 2) (!= leftahead home)) then {
			turn left;
			call Bouge
		}
		else {
			moveelse {
				if (= rightahead rock) then {
					turn left;
					turn left;
					call Bouge
				}
				else {
					turn right;
					turn right;
					call Bouge
				}
			}
		}
		}
		};
		mark 3
	}
};


macro voleuses = {
    while(true) do{
        call GoToBaseEnnemi;
        call TrouveNourritureDansBase;
        call RentreMaison;
        drop
    }
};

macro chercheuses ={
    if (random 2) then {
        while(true) do {
            if (= ahead home) then {
                drop;
                turn left;
                turn left;
                turn left;
                call moveTest
            }
            else {
                if (=leftahead home) then{
                    drop;
                    turn left;
                    turn left;
                    turn left;
                    turn left;
                    call moveTest
                }
                else {
                    if (=rightahead home) then {
                        drop;
                        turn left;
                        turn left;
                        call moveTest
                    }
                    else {
                        if (=ahead food) then {
                            call moveTest;
                            pickup;
                            turn left;
                            turn left;
                            turn left;
                            call moveTest
                        }
                        else {
                            if (=rightahead food) then {
                                turn right;
                                call moveTest;
                                pickup;
                                turn left;
                                turn left;
                                turn left;
                                call moveTest
                            }
                            else {
                                if (=leftahead food) then {
                                    turn left;
                                    call moveTest;
                                    pickup;
                                    turn left;
                                    turn left;
                                    turn left;
                                    call moveTest
                                }
                                else {
                                    nop
                                }
                            }
                        }
                    }
                }
            };
            drop;
            if (= here food) then {
                pickup;
                if (= ahead marker 1) then {
                    call moveTest;
                    mark 0;
                    unmark 1
                }
                else {
                    if (= rightahead marker 1) then {
                        turn right;
                        call moveTest;
                        mark 0;
                        unmark 1
                    }
                    else {
                        if (= leftahead marker 1) then {
                            turn left;
                            call moveTest;
                            mark 0;
                            unmark 1
                        }
                        else {
                            if (random 3) then {
                                turn left
                            }
                            else {
                                if (random 2) then {
                                    turn right
                                }
                                else {
                                    nop
                                }
                            };
                            call moveTest;
                            mark 0
                        }
                    }
                }
            }
            else {
                if (= ahead marker 0) then {
                    call moveTest;
                    mark 1;
                    unmark 0
                }
                else {
                    if (= rightahead marker 0) then {
                        turn right;
                        call moveTest;
                        mark 1;
                        unmark 0
                    }
                    else {
                        if (= leftahead marker 0) then {
                            turn left;
                            call moveTest;
                            mark 1;
                            unmark 0
                        }
                        else {
                            if (random 3) then {
                                turn left
                            }
                            else {
                                if (random 2) then {
                                    turn right
                                }
                                else {
                                    nop
                                }
                            };
                            call moveTest;
                            mark 1
                        }
                    }
                }
            };
            if (random 10) then {
                unmark 0;
                unmark 1
            }
            else {
                nop
            }
        }
    }
    else {
        while(true) do {
            if (= ahead home) then {
                call moveTest;
                drop;
                turn left;
                turn left;
                turn left;
                call moveTest
            }
            else {
                if (=leftahead home) then{
                    turn left;
                    call moveTest;
                    drop;
                    turn left;
                    turn left;
                    turn left;
                    call moveTest
                }
                else {
                    if (=rightahead home) then {
                        turn right;
                        call moveTest;
                        drop;
                        turn left;
                        turn left;
                        turn left;
                        call moveTest
                    }
                    else {
                        if (=ahead food) then {
                            call moveTest;
                            pickup;
                            turn left;
                            turn left;
                            turn left;
                            call moveTest
                        }
                        else {
                            if (=rightahead food) then {
                                turn right;
                                call moveTest;
                                pickup;
                                turn left;
                                turn left;
                                turn left;
                                call moveTest
                            }
                            else {
                                if (=leftahead food) then {
                                    turn left;
                                    call moveTest;
                                    pickup;
                                    turn left;
                                    turn left;
                                    turn left;
                                    call moveTest
                                }
                                else {
                                    nop
                                }
                            }
                        }
                    }
                }
            };
            drop;
            if (= here food) then {
                pickup;
                if (= ahead marker 5) then {
                    call moveTest;
                    mark 4;
                    unmark 5
                }
                else {
                    if (= rightahead marker 5) then {
                        turn right;
                        call moveTest;
                        mark 4;
                        unmark 5
                    }
                    else {
                        if (= leftahead marker 5) then {
                            turn left;
                            call moveTest;
                            mark 4;
                            unmark 5
                        }
                        else {
                            if (random 3) then {
                                turn left
                            }
                            else {
                                if (random 2) then {
                                    turn right
                                }
                                else {
                                    nop
                                }
                            };
                            call moveTest;
                            mark 4
                        }
                    }
                }
            }
            else {
                if (= ahead marker 4) then {
                    call moveTest;
                    mark 5;
                    unmark 4
                }
                else {
                    if (= rightahead marker 4) then {
                        turn right;
                        call moveTest;
                        mark 5;
                        unmark 4
                    }
                    else {
                        if (= leftahead marker 4) then {
                            turn left;
                            call moveTest;
                            mark 5;
                            unmark 4
                        }
                        else {
                            if (random 3) then {
                                turn left
                            }
                            else {
                                if (random 2) then {
                                    turn right
                                }
                                else {
                                    nop
                                }
                            };
                            call moveTest;
                            mark 5
                        }
                    }
                }
            };
            if (random 10) then {
                unmark 4;
                unmark 5
            }
            else {
                nop
            }
        }
    }
};

macro worker={
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    call sortieBase;
    if (random 3) then{
        call voleuses
    }
    else{
        call chercheuses
    }
};  


if (!= ahead home) then {
    call guard
}
else {
    turn left;
    if (!= ahead home) then {
        call guard
    }
    else {
        turn left;
        if (!= ahead home) then {
            call guard
        }
        else {
            turn left;
            if (!= ahead home) then {
                call guard
            }
            else {
                turn left;
                if (!= ahead home) then {
                    call guard
                }
                else {
                    turn left;
                    if (!= ahead home) then {
                        call guard
                    }
                    else {
                        call worker
                    }
                }
            }
        }
    }
}